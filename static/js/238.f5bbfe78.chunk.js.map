{"version":3,"file":"static/js/238.f5bbfe78.chunk.js","mappings":"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","sources":["views/pages/errors/Error404.js","views/pages/SalesReport.js","services/transaction.js","services/account.js","views/components/Pagination.js","utils/Antd.js","views/pages/BillingReport.js","views/pages/AccountTransaction.js","views/pages/Account.js","services/file.js","utils/UploadCSV.js","views/pages/Transaction.js","views/layout/Layout.js"],"sourcesContent":["import { Result, Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\n\nexport default function Error404() {\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\n        />\n    );\n}\n\n","import React from 'react'\n\nconst SalesReport = () => {\n  return (\n    <div>SalesReport</div>\n  )\n}\n\nexport default SalesReport","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'transation';\n\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static detail(id, data) {\n        return axios.get(this.baseURL + '/details/'+id, { params: data });\n    }\n    static save(data) {\n        return axios.post(this.baseURL + \"/save\", data);\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n    static saveFromCSVUrl(data) {\n        return axios.post(this.baseURL + \"/csv-upload\", data);\n    }\n    static checkPrevTransation(data) {\n        return axios.post(this.baseURL + \"/check-prev-transation\", data);\n    }\n\n    static listBillReport(data) {\n        return axios.get(this.baseURL + '/list-bill-report', { params: data });\n    }\n\n    static listLedger(data) {\n        return axios.get(this.baseURL + '/list-ledger', { params: data });\n    }\n}","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'account';\n\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static detail(id, data) {\n        return axios.get(this.baseURL + '/details/'+id, { params: data });\n    }\n    static save(data) {\n        return axios.post(this.baseURL + \"/save\", data);\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n}","import { Pagination, Tag } from 'antd';\nexport default function MyPagination(props) {\n    const { qData, setQData } = props;\n\n    const handleChange = (page, pp) => {\n        if (qData.limit !== pp) {\n            setQData({ ...qData, page: 1, limit: pp });\n        } else {\n            setQData({ ...qData, page: page });\n        }\n    }\n\n    const showTotal = () => {\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\n        let end = qData.page * qData.limit;\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\n    }\n    return (\n        <>\n            {\n                qData.total > 0\n                    ? <Pagination\n                        total={qData.total}\n                        showTotal={showTotal}\n                        pageSize={qData.limit}\n                        current={qData.page}\n                        onChange={handleChange}\n                        showSizeChanger={true}\n                    />\n                    : null\n            }\n        </>\n    );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState, forwardRef } from 'react';\nimport moment from 'moment';\nimport {\n    DatePicker,\n    Checkbox,\n    message,\n    Upload,\n    Modal,\n} from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nexport function AntdDatepicker(props) {\n    let {\n        format,\n        getFormat = 'YYYY-MM-DD',\n        inputReadOnly,\n        value,\n        defaultValue,\n        onChange,\n        disablePastDate = false,\n        disableUpcomingDate = false,\n        ...rest\n    } = props;\n\n\n    let otherProps = {};\n    if (typeof value !== \"undefined\") {\n        // otherProps.value = moment(value).format(format || 'DD MMM YYYY') ? moment(new Date(value)) : null\n        otherProps.value = moment(new Date(value ? value : new Date()), format || 'DD MMM YYYY');\n    }\n    if (typeof defaultValue !== \"undefined\") {\n        otherProps.defaultValue = defaultValue ? moment(new Date(defaultValue)) : null\n    }\n    if (typeof onChange !== \"undefined\") {\n        otherProps.onChange = (dt) => {\n            onChange(dt ? moment(dt).format(getFormat) : null);\n        }\n    }\n    useEffect(() => {\n        onChange(moment(value).format(getFormat))\n    }, [])\n\n    return (\n        <DatePicker\n            format={format || 'DD MMM YYYY'}\n            inputReadOnly={inputReadOnly || true}\n            disabledDate={(current) => {\n                let customDate = moment().format(\"YYYY-MM-DD\");\n                if (disablePastDate) {\n                    return current && current < moment(customDate, \"YYYY-MM-DD\");\n                }\n                if (disableUpcomingDate) {\n                    return current && current > moment(customDate, \"YYYY-MM-DD\");\n                }\n            }}\n            {...otherProps}\n            {...rest}\n            style={{ width: '100%' }}\n        />\n    )\n}\n\nexport function MultiChechBox(props) {\n    const { col = 3 } = props;\n    const type = typeof props.value === 'object' ? 'array' : 'string';\n\n    let [values, setValues] = useState();\n    let [options, setOptions] = useState([]);\n\n    const handleChange = (e) => {\n        const val = typeof e.target.value * 1 !== 'NaN' ? e.target.value + '' : e.target.value * 1;\n        if (e.target.checked) {\n            values.push(val)\n            setValues([...values]);\n        } else {\n            if (values.indexOf(val) > -1) {\n                values.splice(values.indexOf(val), 1);\n                setValues([...values])\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (type === 'string') {\n            values = props.value ? props.value.split(',').map((v) => v * 1) : [];\n            setValues([...values]);\n        } else {\n            setValues([...props.value]);\n        }\n    }, [props.value]);\n\n    useEffect(() => {\n        let opts = props.options.map((v, i) => {\n            if (v.value) {\n                return { value: v.value * 1, label: v.label }\n            } else if (v.id) {\n                return { value: v.id * 1, label: v.name || v.title || v.label }\n            } else if (v._id) {\n                return { value: v._id + '', label: v.name || v.title || v.label }\n            }\n            return null;\n        });\n        setOptions(opts);\n    }, [props.options]);\n\n    useEffect(() => {\n        // if (type === 'string') {\n        //     props.onChange(values?.join());\n        // } else {\n        props.onChange(values)\n        // }\n    }, [(values || []).join(\",\")])\n\n    return (\n        <div className=\"row mingap\" >\n            {\n                options.map((v, i) => (\n                    <div className={`col-md-${col} mb-2 form-group`} key={i}>\n                        <div className=\"border p-1\">\n                            <Checkbox\n                                value={typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1}\n                                checked={values?.includes(typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1)}\n                                onChange={handleChange}\n                                className=\"mx-0 mr15\"\n                            >\n                                {v.label}\n                            </Checkbox>\n                        </div>\n                    </div>\n                ))\n            }\n        </div>\n\n    );\n}\n\nexport function AntdMsg($msg, $type = 'success') {\n    if ($msg) {\n        if ($type === 'success')\n            message.success($msg);\n        if ($type === 'error')\n            message.error($msg);\n        if ($type === 'warning')\n            message.warning($msg);\n    }\n};\n\nfunction getBase64(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}\n\nconst UploadImage = forwardRef((props, ref) => {\n    const { fileCount } = props;\n    const fileRef = ref;\n    let { files } = props;\n    useEffect(() => {\n        setFileList(files)\n    }, [files])\n\n    if (files.length) {\n        files = files?.map((v, i) => {\n            return { uid: i, url: v.url, status: 'done', name: v.name };\n        });\n    } else {\n        files = [];\n    }\n\n\n    const [fileList, setFileList] = useState(files);\n\n    const dummyRequest = ({ file, onSuccess }) => {\n        setTimeout(() => {\n            onSuccess(\"ok\");\n            if (!fileRef.current.uploadingFiles) {\n                fileRef.current.uploadingFiles = [];\n            }\n            fileRef.current.uploadingFiles?.push(file);\n        }, 0);\n    };\n    const [previewVisible, setPreviewVisible] = useState(false);\n    const [previewImage, setPreviewImage] = useState('');\n    const [previewTitle, setPreviewTitle] = useState('');\n\n    const handleCancel = () => setPreviewVisible(false);\n\n    const handlePreview = async file => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n        setPreviewVisible(true);\n        setPreviewImage(file.url || file.preview);\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n    };\n\n    const handleChange = ({ fileList: newFileList }) => {\n        setFileList(newFileList);\n    };\n\n    const uploadButton = (\n        <div>\n            <PlusOutlined />\n            <div style={{ marginTop: 8 }}>Upload</div>\n        </div>\n    );\n    return (\n        <>\n            <Upload\n                // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                listType=\"picture-card\"\n                customRequest={dummyRequest}\n                fileList={fileList}\n                onPreview={handlePreview}\n                onChange={(value) => {\n                    if (value.file.status === 'removed' || value.file.status) {\n                        handleChange(value)\n                    }\n                }}\n                beforeUpload={\n                    (file) => {\n                        if (!file.type.includes('image/')) {\n                            message.error('Invalid file type');\n                            return false\n                        }\n                    }\n                }\n                onRemove={(e) => {\n                    if (!fileRef.current.deletingFiles) {\n                        fileRef.current.deletingFiles = [];\n                    }\n                    if (!e.thumbUrl) {\n                        fileRef.current.deletingFiles?.push(e);\n                    } else {\n                        fileRef.current.uploadingFiles = fileRef.current.uploadingFiles.filter((v) => { return v.uid !== e.uid })\n                    }\n                }}\n            >\n                {fileList.length >= fileCount ? null : uploadButton}\n            </Upload>\n            <Modal\n                open={previewVisible}\n                title={previewTitle}\n                footer={null}\n                onCancel={handleCancel}\n            >\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n            </Modal>\n        </>\n    );\n})\n\nexport default UploadImage;","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Row, Col, Modal, Typography, Select, DatePicker } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../services/transaction';\nimport serviceAccount from '../../services/account';\nimport Pagination from '../components/Pagination';\nimport { AntdMsg } from '../../utils/Antd';\nimport moment from 'moment';\n\nexport default function BillingReport({ transactionType = \"credit\" }) {\n\tconst path = window.location.pathname.split('/')[2];\n\tconst [data, setData] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst [accounts, setAccounts] = useState([]);\n\tconst [qData, setQData] = useState({ page: 1, limit: 20, transactionType, /* accountId: '63c642983150f06edc719889' */ });\n\tconst addNewModalRef = useRef();\n\n\tconst columns = [\n\t\t{\n\t\t\ttitle: 'Account Name',\n\t\t\tdataIndex: 'accountDetails',\n\t\t\trender: (data) => data?.name\n\t\t},\n\t\t// {\n\t\t// \ttitle: 'Receivable Account',\n\t\t// \tdataIndex: 'accountRecievable',\n\t\t// \twidth: 250,\n\t\t// \thidden: transactionType === 'debit'\n\t\t// },\n\t\t{\n\t\t\ttitle: 'Date',\n\t\t\tdataIndex: 'date',\n\t\t\twidth: 150,\n\t\t\trender: v => moment(v).format('DD MMM YYYY')\n\t\t},\n\t\t{\n\t\t\ttitle: 'Amount',\n\t\t\tdataIndex: 'amount',\n\t\t\twidth: 150,\n\t\t},\n\t\t// {\n\t\t// \ttitle: 'Bill Number',\n\t\t// \tdataIndex: 'billNumber',\n\t\t// \twidth: 150,\n\t\t// },\n\t\t// {\n\t\t// \ttitle: 'Previous Date',\n\t\t// \tdataIndex: 'previousTransactionDate',\n\t\t// \twidth: 150,\n\t\t// \trender: v => moment(new Date(v)).format('DD MMM YYYY')\n\t\t// },\n\t\t// {\n\t\t// \ttitle: 'Previous Transactions Debit',\n\t\t// \tdataIndex: 'previousDebitTransactions',\n\t\t// \twidth: 250,\n\t\t// \trender: v => { return v?.map(vv => <Tag>{moment(new Date(vv?.date)).format('DD MMM YYYY')} -- {vv.amount} </Tag>) }\n\t\t// },\n\t\t// {\n\t\t// \ttitle: 'Previous Transactions Credit',\n\t\t// \tdataIndex: 'previousCreditTransactions',\n\t\t// \twidth: 250,\n\t\t// \trender: v => { return v?.map(vv => <Tag>{moment(new Date(vv?.date)).format('DD MMM YYYY')} -- {vv.amount}</Tag>) }\n\t\t// },\n\t\t{\n\t\t\ttitle: 'Previous Billing Amount',\n\t\t\tdataIndex: 'previousCreditAmount',\n\t\t\twidth: 200,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Previous Selling Amount',\n\t\t\tdataIndex: 'previousDebitAmount',\n\t\t\twidth: 200,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Account Initial Amount',\n\t\t\tdataIndex: 'accountDetails',\n\t\t\twidth: 200,\n\t\t\trender: (data) => data?.initialAmount\n\t\t},\n\t\t{\n\t\t\ttitle: 'Action',\n\t\t\tdataIndex: '_id',\n\t\t\twidth: 70,\n\t\t\trender: (v, row) => {\n\t\t\t\treturn <>\n\t\t\t\t\t<Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n\t\t\t\t</>\n\t\t\t}\n\t\t},\n\t].filter(item => !item.hidden);\n\n\tfunction list() {\n\t\tsetLoading(true);\n\t\tservice.listBillReport(qData).then(res => {\n\t\t\tsetData(res.data?.map((v) => ({ ...v, key: v.accountId })));\n\t\t\tsetQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n\t\t}).catch(err => { }).finally(() => {\n\t\t\tsetLoading(false);\n\t\t});\n\t}\n\n\tconst deleteData = (id) => {\n\t\tservice.delete(id).then(res => {\n\t\t\tAntdMsg(res.message);\n\t\t\tlist();\n\t\t}).catch(err => {\n\t\t\tAntdMsg(err.message, 'error');\n\t\t})\n\t}\n\n\tconst tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n\ttableColumns[0].fixed = true;\n\ttableColumns[tableColumns.length - 1].fixed = 'right';\n\n\tconst tableProps = {\n\t\tbordered: true,\n\t\tloading,\n\t\tsize: 'small',\n\t\ttitle: () => <Search {...{ addNewModalRef, deleteData, qData, setQData, list, accounts }} />,\n\t\tshowHeader: true,\n\t\tfooter: () => <Pagination {...{ qData, setQData }} />,\n\t\ttableLayout: undefined,\n\t};\n\tuseEffect(() => {\n\t\tsetQData({ ...qData, transactionType: path === \"sales-transaction\" ? \"debit\" : \"credit\" })\n\t}, [path])\n\n\tuseEffect(() => {\n\t\tlist();\n\t}, [qData.page, qData.limit, qData.transactionType]);\n\n\n\tuseEffect(() => {\n\t\tserviceAccount.list({ isAll: 1 })\n\t\t\t.then(res => {\n\t\t\t\tsetAccounts(res.data);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tif (typeof err.message === 'object') {\n\t\t\t\t\tlet dt = err.message[Object.keys(err.message)[0]];\n\t\t\t\t\tAntdMsg(dt, 'error');\n\t\t\t\t} else {\n\t\t\t\t\tAntdMsg(err.message, 'error');\n\t\t\t\t}\n\t\t\t})\n\t}, []);\n\n\t// const dataSource = [\n\t// \t{\n\t// \t\t_id: 1,\n\t// \t\tname: \"Asad\",\n\t// \t\tdesription: \"Test\"\n\t// \t}\n\t// ]\n\treturn (\n\t\t<>\n\t\t\t<Typography.Title level={5} style={{ margin: 0 }}>List of  Transactions</Typography.Title>\n\n\t\t\t<Table\n\t\t\t\t{...tableProps}\n\t\t\t\tpagination={{ position: ['none'], pageSize: qData.limit }}\n\t\t\t\tcolumns={tableColumns}\n\t\t\t\t// dataSource={dataSource}\n\t\t\t\tdataSource={data.length ? data : []}\n\t\t\t\tscroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n\t\t\t\texpandable={{\n\t\t\t\t\trowExpandable: (record) => true,\n\t\t\t\t\texpandedRowRender: (record) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t{console.log(record.key)}\n\t\t\t\t\t\t\t<div style={{ display: 'flex', flexDirection: 'row-reverse' }} >\n\t\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\t\t// width={300}\n\t\t\t\t\t\t\t\t\tbordered\n\t\t\t\t\t\t\t\t\t// style={{width: '500px'}}\n\t\t\t\t\t\t\t\t\tpagination={false}\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tdataSource={[\n\t\t\t\t\t\t\t\t\t\t...record.previousCreditTransactions,\n\t\t\t\t\t\t\t\t\t\t...record.previousDebitTransactions,\n\t\t\t\t\t\t\t\t\t\t{ date: 'Total', transactionType: 'total' },\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Date',\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'date',\n\t\t\t\t\t\t\t\t\t\t\talign: 'left',\n\t\t\t\t\t\t\t\t\t\t\twidth: 200,\n\t\t\t\t\t\t\t\t\t\t\trender: v => v !== 'Total' ? moment(v).format('DD MMM YYYY') : <b>Total</b>\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Bill',\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'amount',\n\t\t\t\t\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\t\t\t\t\talign: 'right',\n\t\t\t\t\t\t\t\t\t\t\trender: (v, row) => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (['credit', 'debit'].includes(row.transactionType)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn row.transactionType === 'credit' ? v : ''\n\t\t\t\t\t\t\t\t\t\t\t\t} else if (row.date === 'Total') {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <b>{record.previousCreditTransactions?.reduce(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(accumulator, currentValue) => accumulator + currentValue.amount,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(record.accountDetails.initialAmount + record.previousCreditAmount) || 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}</b>\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Sale',\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'amount',\n\t\t\t\t\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\t\t\t\t\talign: 'right',\n\t\t\t\t\t\t\t\t\t\t\trender: (v, row) => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (['credit', 'debit'].includes(row.transactionType)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn row.transactionType === 'debit' ? v : ''\n\t\t\t\t\t\t\t\t\t\t\t\t} else if (row.date === 'Total') {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <b>{record.previousDebitTransactions?.reduce(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(accumulator, currentValue) => accumulator + currentValue.amount,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(record.previousDebitAmount) || 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}</b>\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</>\n\t\t\t\t\t)\n\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<AddForm ref={addNewModalRef} {...{ list, accounts }} />\n\t\t</>\n\t);\n};\n\nfunction Search({ addNewModalRef, qData, setQData, list, accounts }) {\n\n\treturn (\n\t\t<Form onSubmitCapture={list} className=\"search-form\">\n\t\t\t<Row gutter={[12, 2]}>\n\t\t\t\t<Col span={4}>\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\n\t\t\t\t\t\t<Select placeholder=\"Choose a account\" value={qData.accountId} onChange={v => { setQData({ ...qData, accountId: v }) }} allowClear>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\taccounts.map(v => (\n\t\t\t\t\t\t\t\t\t<Select.Option value={v._id} key={v._id}>{v.name}</Select.Option>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={4}>\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\n\t\t\t\t\t\t<DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startTime: new Date(e[0]), endTime: new Date(e[1]) }) }} />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={3}>\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">Search</Button>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={10}>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Form>\n\t);\n}\n\nconst AddForm = forwardRef((props, ref) => {\n\tconst [open, setOpen] = useState(false);\n\n\n\tuseImperativeHandle(ref, () => ({\n\t\topenForm(dt) {\n\t\t\tsetOpen(true);\n\t\t}\n\t}));\n\n\treturn (\n\t\t<>\n\t\t\t<Modal\n\t\t\t\ttitle={'Report Details'}\n\t\t\t\tstyle={{ top: 20 }}\n\t\t\t\topen={open}\n\t\t\t\tokText=\"Save\"\n\t\t\t\t// onOk={save}\n\t\t\t\t// okButtonProps={{ disabled: ajxRequesting }}\n\t\t\t\tonCancel={() => { setOpen(false); }}\n\t\t\t\t// destroyOnClose\n\t\t\t\tmaskClosable={false}\n\t\t\t\twidth={400}\n\t\t\t\tclassName=\"app-modal-body-overflow\"\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t</Modal>\n\t\t</>\n\t);\n});","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, DatePicker } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../services/transaction';\nimport Pagination from '../components/Pagination';\nimport { AntdMsg } from '../../utils/Antd';\nimport moment from 'moment';\nimport dayjs from 'dayjs';\n\nexport default function AccountTransaction({ accountId = null }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, accountId });\n    const addNewModalRef = useRef();\n\n\n    const columns = [\n        {\n            title: '#',\n            width: 30,\n            render: (v, row, i) => <b>{i + 1}</b>\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            render: v => moment(v).format('DD MMM YYYY')\n        },\n        {\n            title: 'Bill Number',\n            dataIndex: 'billNumber',\n            width: 150,\n        },\n        {\n            title: 'Debit',\n            dataIndex: 'amount',\n            width: 150,\n            render: (v, row) => row.transactionType === 'debit' ? v : ''\n        },\n        {\n            title: 'Credit',\n            dataIndex: 'amount',\n            width: 150,\n            render: (v, row) => row.transactionType === 'credit' ? v : ''\n        },\n        {\n            title: 'Balance',\n            dataIndex: 'previousCreditAmount',\n            width: 150,\n            render: (v, row) => (row.previousCreditAmount - row.previousDebitAmount) * -1\n        },\n        {\n            title: 'Ledger',\n            dataIndex: 'accountRecievable',\n            width: 150,\n            render: (v, row) => row.transactionType === 'debit' ? 'Sale' : v\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    {\n                        <Popconfirm\n                            title=\"Are you sure to delete this data?\"\n                            onConfirm={() => { deleteData(row._id); }}\n                            okText=\"Yes\"\n                            cancelText=\"No\"\n                        >\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                        </Popconfirm>\n                    }\n                    {\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        service.listLedger(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        size: 'small',\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5} style={{ margin: 0 }}>List of  Transactions</Typography.Title>\n\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, accountId }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startTime: new Date(e[0]), endTime: new Date(e[1]) }) }} />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={10}>\n                    {\n                        <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                            <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                        </Form.Item>\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected data?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n}\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, accountId } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n\n    const handleChange = (value) => {\n        Object.entries(value).forEach(ent => {\n            let varDt = data;\n            const k = ent[0];\n            const v = ent[1];\n            let keys = k.split('.');\n            for (let i = 0; i < keys.length; i++) {\n                if (i + 1 === keys.length) {\n                    varDt[keys[i]] = v;\n                } else {\n                    if (typeof varDt[keys[i]] === 'undefined') {\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\n                            varDt[keys[i]] = [];\n                        } else {\n                            varDt[keys[i]] = {};\n                        }\n                    } varDt = varDt[keys[i]];\n                }\n            }\n        });\n        setData({ ...data });\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            console.log('dt', dt);\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { accountId, date: new Date() }\n            );\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detail(data._id).then(res => {\n            console.log(res.data);\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        service.save(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id, open]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Transaction Data'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                // destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[0, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Transaction Type\" required>\n                                    <Select value={data.transactionType} onChange={v => { handleChange({ transactionType: v }) }} >\n                                        <Select.Option value={\"credit\"} >Bill</Select.Option>\n                                        <Select.Option value={\"debit\"} >Sell</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Amount\" required>\n                                    <Input placeholder='Enter Amount' type=\"number\" min={0} value={data.amount} onChange={(e) => handleChange({ amount: e.target.value })}></Input>\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Bill Number\" required>\n                                    <Input placeholder='Enter bill number' value={data.billNumber} onChange={(e) => handleChange({ billNumber: e.target.value })}></Input>\n                                </Form.Item>\n                            </Col>\n                            {\n                                data.transactionType === 'credit'\n                                    ? <Col span={24}>\n                                        <Form.Item label=\"Account Recievable\" required>\n                                            <Input value={data.accountRecievable} onChange={(e) => handleChange({ accountRecievable: e.target.value })}></Input>\n                                        </Form.Item>\n                                    </Col>\n                                    : null\n                            }\n                            {\n                                data.transactionType === 'debit'\n                                    ? <Col span={24}>\n                                        <Form.Item label=\"Type\" required>\n                                            <Input placeholder='Enter your type' value={data.type} onChange={(e) => handleChange({ type: e.target.value })}></Input>\n                                        </Form.Item>\n                                    </Col>\n                                    : null\n                            }\n                            <Col span={24}>\n                                <Form.Item label=\"Date\" required>\n                                    <DatePicker\n                                        format='DD MMM YYYY'\n                                        onChange={(v) => { handleChange({ date: new Date(v) }) }}\n                                        value={dayjs(moment(data.date).format('YYYY-MM-DD'), 'YYYY-MM-DD')}\n                                        className=\"w-100\"\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Tag } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../services/account';\nimport Pagination from '../components/Pagination';\nimport { AntdMsg } from '../../utils/Antd';\nimport AccountTransaction from './AccountTransaction';\n\nexport default function Account({ type }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\n    const addNewModalRef = useRef();\n    const transactionModalRef = useRef();\n\n\n    const columns = [\n        {\n            title: '#',\n            width: 44,\n            render: (v, row, i) => <b>{i + 1}</b>\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            // width: 200,\n        },\n        {\n            title: 'Initial Amount',\n            dataIndex: 'initialAmount',\n            width: 150,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: (_, row) => {\n                if (row.status === \"opened\") {\n                    return <Tag color='green'>Opened</Tag>\n                } else {\n                    return <Tag color='red'>Closed</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 110,\n            render: (v, row) => {\n                return <>\n                    {\n                        <Popconfirm\n                            title=\"Are you sure to delete this Account data?\"\n                            onConfirm={() => { deleteData(row._id); }}\n                            okText=\"Yes\"\n                            cancelText=\"No\"\n                        >\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                        </Popconfirm>\n                    }\n                    {\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} style={{ marginRight: \"4px\" }} />\n                    }\n                    {\n                        <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { transactionModalRef.current.openForm(row._id) }} />\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        service.list(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5}>List of  Accounts</Typography.Title>\n\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, type }} />\n            <TransactionModal ref={transactionModalRef} />\n\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder='Search by name' onChange={(e) => { setQData({ ...qData, key: e.target.value }) }} />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {\n                        <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                            <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                        </Form.Item>\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected Data?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n    const handleChange = (value) => { setData({ ...data, ...value }); }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { status: true }\n            );\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detail(data._id).then(res => {\n            setData(res.data || {});\n\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        service.save(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        }\n    }, [open]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Account Data'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={600}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[0, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder='Enter Name' value={data.name} onChange={(e) => handleChange({ name: e.target.value })}></Input>\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Initial Amount\" required>\n                                    <Input type='number' defaultValue={0} value={data.initialAmount} onChange={(e) => handleChange({ initialAmount: e.target.value })}></Input>\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\n                                        <Select.Option value=\"opened\">Opened</Select.Option>\n                                        <Select.Option value=\"closed\">Closed</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n\n\nconst TransactionModal = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(dt);\n        }\n    }));\n    return (\n        <>\n            <Modal\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onCancel={() => { setOpen(false); }}\n                maskClosable={false}\n                width={1600}\n                destroyOnClose\n                className=\"app-modal-body-overflow\"\n                footer={null}\n            >\n                <AccountTransaction accountId={data} />\n            </Modal>\n        </>\n    );\n});\n","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'file';\n\n    static get(url) {\n        return axios.get(\"../\"+  url);\n    }\n\n    static save(data, config) {\n        return axios.post(this.baseURL + \"/save\", data, config);\n    }\n    static remove(data) {\n        return axios.post(this.baseURL + \"/remove\", data);\n    }\n\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Upload, Button } from \"antd\";\nimport { UploadOutlined } from '@ant-design/icons';\n\nimport fileService from \"../services/file\";\nimport React from \"react\";\n\nexport default function UploadAudio({ fileList, setFileList, count = 1, disabled = false }) {\n    const uploadImage = async options => {\n        const { onSuccess, onError, file, onProgress } = options;\n\n        const fmData = new FormData();\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\n        fmData.append(\"file\", file);\n        try {\n            fileService.save(fmData, config).then(res => {\n                onSuccess(\"Ok\");\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\n            })\n        } catch (err) {\n            onError({ err });\n        }\n    };\n\n    const handleOnChange = ({ file, fl }) => {\n        if (typeof fl !== typeof []) {\n            fl = [];\n        }\n        setFileList(fl);\n\n    };\n    const handleRemove = (file) => {\n        fileService.remove({ uid: file.uid }).then(res => {\n            // setFileList(fileList?.filter(v => v.uid !== file.uid))\n        })\n    };\n\n    return <Upload\n        accept=\"text/csv\"\n        customRequest={uploadImage}\n        onChange={handleOnChange}\n        onRemove={handleRemove}\n        listType=\"picture\"\n        fileList={fileList}\n        className=\"image-upload-grid\"\n        disabled={disabled}\n        onPreview={(file) => {\n            return fetch(file.url, {\n                method: 'GET',\n            })\n                .then(res => res.json())\n                .then(({ thumbnail }) => {\n                    return thumbnail;\n                });\n        }}\n    >\n        {\n            fileList?.length >= count\n                ? null\n                : <Button icon={<UploadOutlined />} type=\"dashed\" danger style={{ margin: 30, width: \"134%\"}}>Upload CSV File</Button>\n        }\n    </Upload >\n\n};","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, DatePicker, message, Timeline, Tag } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, UploadOutlined, ExclamationCircleFilled } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../services/transaction';\nimport serviceAccount from '../../services/account';\nimport Pagination from '../components/Pagination';\nimport { AntdMsg } from '../../utils/Antd';\nimport moment from 'moment';\nimport UploadCSV from '../../utils/UploadCSV';\nimport dayjs from 'dayjs';\n\nexport default function Transaction({ transactionType = \"credit\" }) {\n    const path = window.location.pathname.split('/')[2];\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [accounts, setAccounts] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, transactionType });\n    const addNewModalRef = useRef();\n    const uploadCsvModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Account Name',\n            dataIndex: 'accountDetail',\n            render: (data) => data?.name\n        },\n        {\n            title: 'Receivable Account',\n            dataIndex: 'accountRecievable',\n            width: 250,\n            hidden: transactionType === 'debit'\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            width: 150,\n            render: v => moment(v).format('DD MMM YYYY')\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            width: 150,\n        },\n        {\n            title: 'Bill Number',\n            dataIndex: 'billNumber',\n            width: 150,\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    {\n                        <Popconfirm\n                            title=\"Are you sure to delete this Account data?\"\n                            onConfirm={() => { deleteData(row._id); }}\n                            okText=\"Yes\"\n                            cancelText=\"No\"\n                        >\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                        </Popconfirm>\n                    }\n                    {\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        service.list(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, uploadCsvModalRef, selected, deleteData, qData, setQData, list, accounts }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n    useEffect(() => {\n        setQData({ ...qData, transactionType: path === \"sales-transaction\" ? \"debit\" : \"credit\" })\n    }, [path])\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit, qData.transactionType]);\n\n\n    useEffect(() => {\n        serviceAccount.list({ isAll: 1 })\n            .then(res => {\n                setAccounts(res.data);\n            })\n            .catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            })\n    }, []);\n\n\n    return (\n        <>\n            <Typography.Title level={5} style={{ margin: 0 }}>List of  Transactions</Typography.Title>\n\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, accounts, transactionType }} />\n            <UploadCsvModal ref={uploadCsvModalRef} transactionType={transactionType} list={list} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, uploadCsvModalRef, selected, deleteData, qData, setQData, list, accounts }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Select placeholder=\"Choose a account\" value={qData.accountId} onChange={v => { setQData({ ...qData, accountId: v }) }} allowClear>\n                            {\n                                accounts.map(v => (\n                                    <Select.Option value={v._id} key={v._id}>{v.name}</Select.Option>\n                                ))\n                            }\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startTime: new Date(e[0]), endTime: new Date(e[1]) }) }} />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={10}>\n                    {\n                        <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                            <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                        </Form.Item>\n                    }\n                    {\n                        <Form.Item style={{ marginBottom: 0, float: 'right', marginRight: \"1rem\" }}>\n                            <Button type=\"primary\" icon={<UploadOutlined />} onClick={() => { uploadCsvModalRef.current.openForm() }}>Upload File (CSV)</Button>\n                        </Form.Item>\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected Data?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n}\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, accounts, transactionType } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n\n    const handleChange = (value) => {\n        Object.entries(value).forEach(ent => {\n            let varDt = data;\n            const k = ent[0];\n            const v = ent[1];\n            let keys = k.split('.');\n            for (let i = 0; i < keys.length; i++) {\n                if (i + 1 === keys.length) {\n                    varDt[keys[i]] = v;\n                } else {\n                    if (typeof varDt[keys[i]] === 'undefined') {\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\n                            varDt[keys[i]] = [];\n                        } else {\n                            varDt[keys[i]] = {};\n                        }\n                    } varDt = varDt[keys[i]];\n                }\n            }\n        });\n        setData({ ...data });\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { transactionType }\n            );\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detail(data._id).then(res => {\n            setData(res.data || {});\n\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        service.save(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        }\n    }, [open]);\n\n\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Transaction Data'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                // destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[0, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Account Id\" required>\n                                    <Select value={data.accountId} onChange={v => { handleChange({ accountId: v }) }} >\n                                        {\n                                            accounts.map(item => <Select.Option value={item._id} key={item._id}>{item.name}</Select.Option>)\n                                        }\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Amount\" required>\n                                    <Input placeholder='Enter Amount' type=\"number\" min={0} value={data.amount} onChange={(e) => handleChange({ amount: e.target.value })}></Input>\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Bill Number\" required>\n                                    <Input placeholder='Enter bill number' value={data.billNumber} onChange={(e) => handleChange({ billNumber: e.target.value })}></Input>\n                                </Form.Item>\n                            </Col>\n                            {\n                                data.transactionType === 'credit'\n                                    ? <Col span={24}>\n                                        <Form.Item label=\"Account Recievable\" required>\n                                            <Input value={data.accountRecievable} onChange={(e) => handleChange({ accountRecievable: e.target.value })}></Input>\n                                        </Form.Item>\n                                    </Col>\n                                    : null\n                            }\n                            {\n                                data.transactionType === 'debit'\n                                    ? <Col span={24}>\n                                        <Form.Item label=\"Type\" required>\n                                            <Input placeholder='Enter your type' value={data.type} onChange={(e) => handleChange({ type: e.target.value })}></Input>\n                                        </Form.Item>\n                                    </Col>\n                                    : null\n                            }\n                            <Col span={24}>\n                                <Form.Item label=\"Date\" required>\n                                    <DatePicker\n                                        format='DD MMM YYYY'\n                                        onChange={(v) => { handleChange({ date: new Date(v) }) }}\n                                        value={dayjs(moment(data.date).format('YYYY-MM-DD'), 'YYYY-MM-DD')}\n                                        className=\"w-100\"\n                                    />\n                                </Form.Item>\n                            </Col>\n\n                        </Row>\n                    </Form>\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\nconst UploadCsvModal = forwardRef((props, ref) => {\n    const { list, transactionType } = props;\n    const [open, setOpen] = useState(false);\n    const [fileList, setFileList] = useState([]);\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [confirmDeletion, setConfirmDeletion] = useState(false);\n\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setFileList([]);\n        }\n    }));\n\n    const save = () => {\n        if (fileList[0]?.url && confirmDeletion) {\n            setAjxRequesting(true);\n            service.saveFromCSVUrl({ url: fileList[0]?.url, transactionType }).then((res) => {\n                AntdMsg(res.message);\n                list();\n                // setOpen(false);\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n    }\n\n    useEffect(() => {\n        if (fileList[0]?.url) {\n            service.checkPrevTransation({ url: fileList[0]?.url, transactionType }).then(res => {\n                if (res.data.alreadyExistedDataDates?.length > 0) {\n                    confirmDeletionModal(res.data.alreadyExistedDataDates);\n                } else {\n                    message.success(res.message);\n                    setConfirmDeletion(true);\n                }\n            }).catch(err => {\n                message.warning(err.message);\n            })\n        }\n    }, [fileList])\n\n    const confirmDeletionModal = (alreadyExistedDataDates) => {\n        Modal.confirm({\n            title: 'Records Already exists',\n            icon: <ExclamationCircleFilled />,\n            content: <>\n                <p>Records will be deleted on these dates </p>\n                {\n                    alreadyExistedDataDates.map((v, i) => (<Tag color=\"red\" key={i}>{v}</Tag>))\n                }\n            </>,\n            okText: 'Delete Records',\n            okType: 'danger',\n            cancelText: 'Cancel',\n            onOk() {\n                setConfirmDeletion(true);\n            },\n            onCancel() { },\n        })\n    }\n\n    return (\n        <>\n            <Modal\n                title=\"Upload File (CSV)\"\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onCancel={() => { setOpen(false); }}\n                maskClosable={false}\n                width={400}\n                destroyOnClose\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save} disabled={!confirmDeletion || ajxRequesting}>Save</Button>,\n                ]}\n            >\n                <UploadCSV {...{ fileList, setFileList }} count={1} />\n            </Modal>\n        </>\n    );\n});","import React from \"react\";\nimport { Card, Layout, Menu } from \"antd\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport Error404 from \"../pages/errors/Error404\";\nimport commonObj from \"../../commonObj\";\nimport SalesReport from \"../pages/SalesReport\";\nimport BillingReport from \"../pages/BillingReport\";\nimport Account from \"../pages/Account\";\nimport Transaction from \"../pages/Transaction\";\n\n\nexport default function MyLayout() {\n\n    return (\n        <>\n            <Layout style={{ minHeight: '100vh', }}>\n                <Layout className=\"site-layout\" >\n                    <Layout.Header  style={{ padding: 0, height: 'auto' }} >\n                        <Menu theme=\"dark\" mode=\"horizontal\" items={[\n                            {\n                                label: <Link to={'/sales-report'}>Sales Report</Link>,\n                                key: \"sales-report\"\n                            },\n                            {\n                                label: <Link to={'/billing-report'}>Billing Report</Link>,\n                                key: \"billing-report\"\n                            },\n                            {\n                                label: <Link to={'/accounts'}>Accounts</Link>,\n                                key: \"accounts\"\n                            },\n                            {\n                                label: <Link to={'/bill-transaction'}>Bill Transactions</Link>,\n                                key: \"bill-transaction\"\n                            },\n                            {\n                                label: <Link to={'/sales-transaction'}>Sales Transactions</Link>,\n                                key: \"sales-transaction\"\n                            },\n                            {\n                                label: commonObj?.name ? commonObj.name : 'You',\n                                key: 'profile',\n                                children: [\n                                    {\n                                        key: 'Profile',\n                                        label: 'Profile',\n                                    },\n                                    {\n                                        key: 'Logout',\n                                        danger: true,\n                                        label: 'Logout',\n                                        onClick: () => { window.localStorage.clear(); window.location.reload(); }\n                                    }\n                                ]\n                            }\n                        ]}>\n                        </Menu>\n                    </Layout.Header>\n\n                    <Layout.Content>\n                        <Card style={{ borderRadius: \"none\" }}>\n                            <Routes>\n                                <Route path=\"sales-report\" element={<SalesReport />} />\n                                <Route path=\"billing-report\" element={ <BillingReport /> } />\n                                <Route path=\"accounts\" element={ <Account /> } />\n                                <Route path=\"bill-transaction\" element={ <Transaction transactionType=\"credit\" /> } />\n                                <Route path=\"sales-transaction\" element={ <Transaction transactionType=\"debit\" /> } />\n                                <Route path={'*'} element={<Error404 />} />\n                            </Routes>\n                        </Card>\n                    </Layout.Content>\n                </Layout>\n            </Layout>\n        </>\n    );\n\n}"],"names":["Error404","status","title","subTitle","extra","to","type","service","data","axios","this","baseURL","params","id","ids","MyPagination","props","qData","setQData","total","showTotal","start","page","limit","end","pageSize","current","onChange","pp","showSizeChanger","AntdMsg","$msg","$type","message","BillingReport","transactionType","path","window","location","pathname","split","useState","setData","loading","setLoading","accounts","setAccounts","addNewModalRef","useRef","columns","dataIndex","render","name","width","v","moment","format","initialAmount","row","size","icon","EyeOutlined","onClick","openForm","_id","filter","item","hidden","list","listBillReport","then","res","map","key","accountId","catch","err","finally","deleteData","tableColumns","ellipsis","fixed","length","tableProps","bordered","Search","showHeader","footer","tableLayout","undefined","useEffect","serviceAccount","isAll","Object","keys","level","style","margin","pagination","position","dataSource","scroll","y","x","expandable","rowExpandable","record","expandedRowRender","console","log","display","flexDirection","previousCreditTransactions","previousDebitTransactions","date","align","includes","reduce","accumulator","currentValue","amount","accountDetails","previousCreditAmount","previousDebitAmount","AddForm","ref","onSubmitCapture","className","gutter","span","marginBottom","placeholder","value","allowClear","e","startTime","Date","endTime","htmlType","forwardRef","open","setOpen","useImperativeHandle","dt","top","okText","onCancel","maskClosable","AccountTransaction","selected","setSelected","i","onConfirm","cancelText","danger","DeleteOutlined","EditOutlined","listLedger","rowSelection","selectedRowKeys","float","aspect","ajxRequesting","setAjxRequesting","handleChange","entries","forEach","ent","varDt","k","parseInt","save","detail","onOk","okButtonProps","disabled","spinning","indicator","LoadingOutlined","fontSize","spin","layout","label","required","min","target","billNumber","accountRecievable","dayjs","Account","transactionModalRef","_","color","marginRight","TransactionModal","destroyOnClose","defaultValue","url","config","UploadAudio","fileList","setFileList","count","uploadImage","options","onSuccess","onError","file","onProgress","fmData","FormData","onUploadProgress","event","percent","loaded","append","fileService","uid","accept","customRequest","fl","onRemove","listType","onPreview","fetch","method","json","thumbnail","UploadOutlined","Transaction","uploadCsvModalRef","UploadCsvModal","confirmDeletion","setConfirmDeletion","checkPrevTransation","alreadyExistedDataDates","confirmDeletionModal","Modal","ExclamationCircleFilled","content","okType","saveFromCSVUrl","MyLayout","minHeight","padding","height","theme","mode","items","commonObj","children","localStorage","clear","reload","borderRadius","element"],"sourceRoot":""}